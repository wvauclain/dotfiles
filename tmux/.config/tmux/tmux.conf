# General settings
set -g prefix C-a

# Sane mouse behavior
set -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e; send-keys -M'"

# Make vim useable in tmux
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",tmux-256color:Tc,xterm-256color:Tc"
set -sg escape-time 0

# Unbind all keys by default so I can rebind them myself
unbind-key -a -T prefix

#
# Default keybindings I want to keep
#

# Tmux keys
bind-key -T prefix : command-prompt
bind-key -T prefix ? list-keys -T prefix
bind-key -T prefix d detach-client
bind-key -T prefix r source-file ~/.config/tmux/tmux.conf

# Copy mode bindings
set-window-option -g mode-keys vi # Enable vi mode
bind-key -T prefix "[" copy-mode
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Session management
bind-key -T prefix \$ command-prompt -I "#S" "rename-session -- '%%'"
bind-key -T prefix s choose-tree -Zs

# Window management
bind-key -T prefix w choose-tree -Zw
bind-key -T prefix c new-window
bind-key -T prefix & confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key -T prefix , command-prompt -I "#W" "rename-window -- '%%'"

bind-key -T prefix "'" command-prompt -p "window index:" "select-window -t ':%%'"
bind-key -T prefix 0 select-window -t :=0
bind-key -T prefix 1 select-window -t :=1
bind-key -T prefix 2 select-window -t :=2
bind-key -T prefix 3 select-window -t :=3
bind-key -T prefix 4 select-window -t :=4
bind-key -T prefix 5 select-window -t :=5
bind-key -T prefix 6 select-window -t :=6
bind-key -T prefix 7 select-window -t :=7
bind-key -T prefix 8 select-window -t :=8
bind-key -T prefix 9 select-window -t :=9
bind-key -T prefix n select-window -n
bind-key -T prefix p select-window -p
bind-key -T prefix o select-window -l

bind-key -T prefix < display-menu \
-T "#[align=centre]#{window_index}:#{window_name}" \
-x W -y S \
"Swap Left" h "swap-window -t:-1" \
"Swap Right" l "swap-window -t:+1" \
"#{?pane_marked_set,,-}Swap Marked" s swap-window \
Kill X kill-window \
Respawn R "respawn-window -k" \
"#{?pane_marked,Unmark,Mark}" m "select-pane -m" \
Rename n "command-prompt -I \"#W\" \"rename-window -- '%%'\"" \
"New After" w "new-window -a" \
"New At End" W new-window

# Pane management
bind-key -T prefix C-o rotate-window
bind-key -T prefix x confirm-before -p "kill-pane #P? (y/n)" kill-pane

bind-key -T prefix > display-menu \
-T "#[align=centre]#{pane_index} (#{pane_id})" \
-x P -y P \
"#{?mouse_word,Search For #[underscore]#{=/9/...:mouse_word},}" C-r "copy-mode -t=; send -Xt= search-backward \"#{q:mouse_word}\"" \
"#{?mouse_word,Type #[underscore]#{=/9/...:mouse_word},}" C-y "send-keys -l -- \"#{q:mouse_word}\"" \
"#{?mouse_word,Copy #[underscore]#{=/9/...:mouse_word},}" c "set-buffer -- \"#{q:mouse_word}\"" \
"#{?mouse_line,Copy Line,}" l "set-buffer -- \"#{q:mouse_line}\"" \
"Horizontal Split" h "split-window -h" \
"Vertical Split" v "split-window -v" \
"Swap Up" u "swap-pane -U" \
"Swap Down" d "swap-pane -D" \
"#{?pane_marked_set,,-}Swap Marked" s swap-pane \
Kill X kill-pane \
Respawn R "respawn-pane -k" \
"#{?pane_marked,Unmark,Mark}" m \
"select-pane -m" \
"#{?window_zoomed_flag,Unzoom,Zoom}" z "resize-pane -Z"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'
bind-key -n 'C-\' if-shell "$is_vim" 'send-keys C-\' 'select-pane -l'


#
# Non-default keybindings
#

# Tmux
bind-key -T prefix C-a send-prefix

# Window management
bind-key -T prefix - split-window
bind-key -T prefix / split-window -h

bind-key -T prefix k select-pane -U
bind-key -T prefix j select-pane -D
bind-key -T prefix h select-pane -L
bind-key -T prefix l select-pane -R
bind-key -T prefix m resize-pane -Z

bind-key -r -T prefix M-k resize-pane -U 5
bind-key -r -T prefix M-j resize-pane -D 5
bind-key -r -T prefix M-h resize-pane -L 5
bind-key -r -T prefix M-l resize-pane -R 5

bind-key -r -T prefix C-k resize-pane -U
bind-key -r -T prefix C-j resize-pane -D
bind-key -r -T prefix C-h resize-pane -L
bind-key -r -T prefix C-l resize-pane -R

#
# Appearance
#

# Use the gruvbox normal status bar color
set-option -g status-style bg=colour237,fg=colour223

# Show the available windows center-justified
set-option -g status-justify centre

# Don't worry about status overflow, I promise it won't get too long
set-option -g status-left-length 0
set-option -g status-right-length 0

# Tweak the default status styles
set-option -g window-status-format '#[fg=colour246][#I #W#F]'
set-option -g window-status-current-format '#[bold,fg=magenta]{#I #W#F}'
set-option -g status-left "#[bold,bg=colour239,fg=blue] <#S> "
set-option -g status-right "#[italics,bg=colour237,fg=colour246] #W #[bg=colour239,fg=cyan] %H:%M %d-%b-%y "

# Gruvbox colors for the pane borders
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour237 #bg1
